// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: ceph.proto

package cephrpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MountCephRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client      string `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	MountSource string `protobuf:"bytes,2,opt,name=mountSource,proto3" json:"mountSource,omitempty"`
	MountTarget string `protobuf:"bytes,3,opt,name=mountTarget,proto3" json:"mountTarget,omitempty"`
	UidLocal    int64  `protobuf:"varint,4,opt,name=uidLocal,proto3" json:"uidLocal,omitempty"`
	UidRemote   int64  `protobuf:"varint,5,opt,name=uidRemote,proto3" json:"uidRemote,omitempty"`
	GidLocal    int64  `protobuf:"varint,6,opt,name=gidLocal,proto3" json:"gidLocal,omitempty"`
	GidRemote   int64  `protobuf:"varint,7,opt,name=gidRemote,proto3" json:"gidRemote,omitempty"`
}

func (x *MountCephRequest) Reset() {
	*x = MountCephRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ceph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountCephRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountCephRequest) ProtoMessage() {}

func (x *MountCephRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ceph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountCephRequest.ProtoReflect.Descriptor instead.
func (*MountCephRequest) Descriptor() ([]byte, []int) {
	return file_ceph_proto_rawDescGZIP(), []int{0}
}

func (x *MountCephRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *MountCephRequest) GetMountSource() string {
	if x != nil {
		return x.MountSource
	}
	return ""
}

func (x *MountCephRequest) GetMountTarget() string {
	if x != nil {
		return x.MountTarget
	}
	return ""
}

func (x *MountCephRequest) GetUidLocal() int64 {
	if x != nil {
		return x.UidLocal
	}
	return 0
}

func (x *MountCephRequest) GetUidRemote() int64 {
	if x != nil {
		return x.UidRemote
	}
	return 0
}

func (x *MountCephRequest) GetGidLocal() int64 {
	if x != nil {
		return x.GidLocal
	}
	return 0
}

func (x *MountCephRequest) GetGidRemote() int64 {
	if x != nil {
		return x.GidRemote
	}
	return 0
}

type MountCephResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output string `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *MountCephResponse) Reset() {
	*x = MountCephResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ceph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountCephResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountCephResponse) ProtoMessage() {}

func (x *MountCephResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ceph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountCephResponse.ProtoReflect.Descriptor instead.
func (*MountCephResponse) Descriptor() ([]byte, []int) {
	return file_ceph_proto_rawDescGZIP(), []int{1}
}

func (x *MountCephResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

var File_ceph_proto protoreflect.FileDescriptor

var file_ceph_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x65,
	0x70, 0x68, 0x72, 0x70, 0x63, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x65, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x69, 0x64, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x69, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x69, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x67, 0x69, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x67, 0x69, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x69, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x67, 0x69, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x65, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x32, 0x54, 0x0a, 0x0c, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x65, 0x70, 0x68, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x72, 0x70, 0x63, 0x2e, 0x4d,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x65, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x65, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x2f, 0x3b, 0x63, 0x65, 0x70, 0x68, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ceph_proto_rawDescOnce sync.Once
	file_ceph_proto_rawDescData = file_ceph_proto_rawDesc
)

func file_ceph_proto_rawDescGZIP() []byte {
	file_ceph_proto_rawDescOnce.Do(func() {
		file_ceph_proto_rawDescData = protoimpl.X.CompressGZIP(file_ceph_proto_rawDescData)
	})
	return file_ceph_proto_rawDescData
}

var file_ceph_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ceph_proto_goTypes = []interface{}{
	(*MountCephRequest)(nil),  // 0: cephrpc.MountCephRequest
	(*MountCephResponse)(nil), // 1: cephrpc.MountCephResponse
}
var file_ceph_proto_depIdxs = []int32{
	0, // 0: cephrpc.MountService.MountCeph:input_type -> cephrpc.MountCephRequest
	1, // 1: cephrpc.MountService.MountCeph:output_type -> cephrpc.MountCephResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ceph_proto_init() }
func file_ceph_proto_init() {
	if File_ceph_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ceph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountCephRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ceph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountCephResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ceph_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ceph_proto_goTypes,
		DependencyIndexes: file_ceph_proto_depIdxs,
		MessageInfos:      file_ceph_proto_msgTypes,
	}.Build()
	File_ceph_proto = out.File
	file_ceph_proto_rawDesc = nil
	file_ceph_proto_goTypes = nil
	file_ceph_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MountServiceClient is the client API for MountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MountServiceClient interface {
	MountCeph(ctx context.Context, in *MountCephRequest, opts ...grpc.CallOption) (*MountCephResponse, error)
}

type mountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMountServiceClient(cc grpc.ClientConnInterface) MountServiceClient {
	return &mountServiceClient{cc}
}

func (c *mountServiceClient) MountCeph(ctx context.Context, in *MountCephRequest, opts ...grpc.CallOption) (*MountCephResponse, error) {
	out := new(MountCephResponse)
	err := c.cc.Invoke(ctx, "/cephrpc.MountService/MountCeph", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MountServiceServer is the server API for MountService service.
type MountServiceServer interface {
	MountCeph(context.Context, *MountCephRequest) (*MountCephResponse, error)
}

// UnimplementedMountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMountServiceServer struct {
}

func (*UnimplementedMountServiceServer) MountCeph(context.Context, *MountCephRequest) (*MountCephResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MountCeph not implemented")
}

func RegisterMountServiceServer(s *grpc.Server, srv MountServiceServer) {
	s.RegisterService(&_MountService_serviceDesc, srv)
}

func _MountService_MountCeph_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MountCephRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MountServiceServer).MountCeph(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cephrpc.MountService/MountCeph",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MountServiceServer).MountCeph(ctx, req.(*MountCephRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cephrpc.MountService",
	HandlerType: (*MountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MountCeph",
			Handler:    _MountService_MountCeph_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ceph.proto",
}
